generator client {
    provider = "prisma-client-js"
  }
  
  datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_DATABASE_URL")
  }
  
  model User {
    id            String    @id @default(uuid())
    email         String    @unique
    emailVerified DateTime? @map("email_verified")
    phone         String    @default("")
    website       String    @default("")
  
    name     String?
    image    String?
    password String?
    role     ROLE    @default(GUEST)
  
    twoFactorSecret     String?
    tempTwoFactorSecret String?
    twoFactorEnabled    Boolean @default(false)
  
    createdByAdmin Boolean   @default(false)
    isActive       Boolean   @default(true)
    deactivatedAt  DateTime?
  
    // Stripe
    stripeCustomerId           String?
    stripeSubscriptionId       String?
    stripePaymentMethodId      String?
    stripePriceId              String?
    plan                       PLAN?
    stripeSubscriptionStatus   String?
    stripeSubscriptionCancelAt DateTime?
    stripeCurrentPeriodEnd     DateTime?
    planIsActive               Boolean   @default(false)
  
    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    // Relations
    agencyId String?
    Agency   User?   @relation("AgencyToAgents", fields: [agencyId], references: [id], onDelete: SetNull)
  
    // super agency
    superAgencyId String?
    SuperAgency   User?   @relation("SuperAgencyToAgencies", fields: [superAgencyId], references: [id], onDelete: SetNull)
  
    Account        Account[]
    Session        Session[]
    LeadAgent      Lead[]     @relation("AgentToLead")
    LeadAgency     Lead[]     @relation("AgencyToLead")
    Config         Config?
    AgencyAgents   User[]     @relation("AgencyToAgents")
    Agencies       User[]     @relation("SuperAgencyToAgencies")
    AgentMeetings  Meeting[]  @relation("AgentToMeeting")
    AgencyMeetings Meeting[]  @relation("AgencyToMeeting")
    AgencyCalls    LeadCall[] @relation("AgencyToLeadCall")
    AgentCalls     LeadCall[] @relation("AgentToLeadCall")
  
    apiKey             ApiKey[]
    VoiceCampaigns     VoiceCampaign[]
    VoiceCampaignLeads VoiceCampaignLead[]
    Assistant          Assistant[]
    LeadTag            LeadTag[]
    Pipelines          Pipeline[]
    Opportunities      Opportunity[]
    Stages             Stage[]
    Preference         Preference?
    Automations        Automation[]
    AgentFollowUps     FollowUp[]          @relation("AgentToFollowUp")
    AgencyFollowUps    FollowUp[]          @relation("AgencyToFollowUp")
  }
  
  model ApiKey {
    id        String    @id @default(uuid())
    isActive  Boolean   @default(true)
    createdAt DateTime  @default(now())
    lastUsed  DateTime?
  
    agencyId String
    Agency   User   @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  }
  
  model Assistant {
    id String @id @default(uuid())
  
    name        String
    description String
    config      Json?
  
    // Relations
    agencyId String
    Agency   User   @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  
    voiceCampaigns VoiceCampaign[]
  
    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    @@index([agencyId])
  }
  
  model Config {
    id String @id @default(uuid())
  
    assistants           Json?
    vapiPublicKey        String @default("")
    vapiPrivateKey       String @default("")
    trieveApiKey         String @default("")
    trieveOrganizationId String @default("")
  
    // Twilio
    twilioAccountSid String @default("")
  
    // n8n
    n8nWebhookSecret String @unique @default(uuid())
    n8nWebhookUrl    String @default("")
  
    setupCompleted Boolean @default(false)
  
    // White Label Configuration
    whiteLabel               Boolean @default(false)
    showCRM                  Boolean @default(true)
    showCampaign             Boolean @default(true)
    customDomain             String?
    customRootDomain         String?
    customRootDomainVerified Boolean @default(false)
    companyName              String  @default("")
    onlyLogo                 Boolean @default(false)
    companyLogo              String  @default("")
    primaryColor             String  @default("#000000")
    secondaryColor           String  @default("#ffffff")
    faviconUrl               String  @default("")
    title                    String  @default("")
    description              String  @default("")
  
    // Relations 
    agencyId String @unique
    Agency   User   @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  
    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  }
  
  model Account {
    id                String  @id @default(uuid())
    userId            String  @map("user_id")
    type              String
    provider          String
    providerAccountId String  @map("provider_account_id")
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
  
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
    @@unique([provider, providerAccountId])
    @@map("accounts")
  }
  
  model Session {
    id           String   @id @default(uuid())
    sessionToken String   @unique @map("session_token")
    userId       String   @map("user_id")
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
    @@map("sessions")
  }
  
  model VerificationToken {
    identifier String
    token      String
    expires    DateTime
  
    @@unique([identifier, token])
    @@map("verification_tokens")
  }
  
  model Lead {
    id String @id @default(uuid())
  
    // personal information
    name        String
    firstName   String    @default("")
    lastName    String    @default("")
    email       String    @default("")
    bestEmail   String    @default("")
    phone       String
    bestPhone   String    @default("")
    dateOfBirth DateTime?
  
    // general info
    ianaTimezone String @default("") // Asia/Kolkata
    country      String @default("") // country of the lead
    city         String @default("") // city of the lead
    state        String @default("") // state of the lead
    zipCode      String @default("") // zip code of the lead
    address      String @default("") // address of the lead
  
    // additional info 
    company        String @default("")
    companyAddress String @default("")
    industry       String @default("") // ex: Real Estate, Marketing etc.
    website        String @default("")
    message        String @default("") // message sent by the lead
    source         String @default("") // lead source (website, social media, referral, etc.)
    note           String @default("") // note about the lead by agency/agent
    fields         Json? // custom fields
  
    // DND
    emailDND    Boolean @default(false)
    smsDND      Boolean @default(false)
    callDND     Boolean @default(false)
    whatsappDND Boolean @default(false)
  
    // Metadata 
    status     LEAD_STATUS      @default(NEW)
    statusType LEAD_STATUS_TYPE @default(COLD)
    quality    LEAD_QUALITY     @default(UNQUALIFIED)
  
    // Relations
    agentId String?
    Agent   User?   @relation("AgentToLead", fields: [agentId], references: [id], onDelete: SetNull)
  
    agencyId String
    Agency   User   @relation("AgencyToLead", fields: [agencyId], references: [id], onDelete: Cascade)
  
    // Metadata Fields
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    Meeting           Meeting[]
    LeadCalls         LeadCall[]
    VoiceCampaignLead VoiceCampaignLead[]
    LeadTags          LeadTag[]
    LeadNotes         LeadNote[]
    Opportunity       Opportunity[]
    FollowUp          FollowUp[]
  
    // phone+agencyId together are unique
    @@unique([phone, agencyId])
    @@index([agencyId])
    @@index([agentId])
    @@index([status])
    @@index([phone])
  }
  
  model LeadTag {
    id String @id @default(uuid())
  
    name  String
    color String
  
    // Relations
    Leads Lead[]
  
    userId String
    User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    @@index([userId])
  }
  
  model LeadNote {
    id String @id @default(uuid())
  
    note String
  
    // Relations
    leadId String
    Lead   Lead   @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    @@index([leadId])
  }
  
  model Meeting {
    id            String         @id @default(uuid())
    calMeetingID  Int
    calMeetingUID String
    startTime     String
    messageOfLead String
    meetingUrl    String?
    status        MEETING_STATUS @default(UPCOMING)
  
    // Relations
    agentId String?
    Agent   User?   @relation("AgentToMeeting", fields: [agentId], references: [id], onDelete: SetNull)
  
    agencyId String
    Agency   User   @relation("AgencyToMeeting", fields: [agencyId], references: [id], onDelete: Cascade)
  
    leadId String
    Lead   Lead   @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    @@index([agencyId])
    @@index([agentId])
    @@index([leadId])
  }
  
  model LeadCall {
    id          String          @id @default(uuid())
    callId      String          @default("")
    type        CALL_TYPE       @default(OUTBOUND)
    endedReason CALL_END_REASON @default(unknown_error)
    result      CALL_RESULT     @default(SUCCESS)
    notes       String          @default("")
    summary     String          @default("")
    transcript  Json?
    audioUrl    String          @default("")
  
    callType LEAD_CALL_TYPE @default(GLOBAL)
  
    callDuration Float @default(0)
    costVAPI     Float @default(0) // total vapi cost
    costTwilio   Float @default(0) // total twilio cost
    totalCost    Float @default(0) // total call cost
  
    // Relations
    leadId String?
    Lead   Lead?   @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
    agencyId String
    Agency   User   @relation("AgencyToLeadCall", fields: [agencyId], references: [id], onDelete: Cascade)
  
    agentId String?
    Agent   User?   @relation("AgentToLeadCall", fields: [agentId], references: [id], onDelete: SetNull)
  
    voiceCampaignId String?
    VoiceCampaign   VoiceCampaign? @relation(fields: [voiceCampaignId], references: [id], onDelete: Cascade)
  
    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    @@index([agencyId])
    @@index([agentId])
    @@index([leadId])
    @@index([voiceCampaignId])
  }
  
  model VoiceCampaign {
    id String @id @default(uuid())
  
    name        String
    description String
    status      VOICE_CAMPAIGN_STATUS @default(DRAFT)
  
    // Settings
    withRetries       Boolean   @default(false)
    withFollowUp      Boolean   @default(false)
    retries           Int       @default(3)
    maxRetryAttempts  Int       @default(3)
    callBackDelay     Int       @default(60)
    concurrentCalls   Int       @default(1)
    startDate         DateTime?
    startTime         String    @default("05:30")
    workingHoursStart String    @default("09:00")
    workingHoursEnd   String    @default("17:00")
    timeZone          String    @default("IST")
    settingsUpdated   Boolean   @default(false)
  
    // Relations
    agencyId String
    Agency   User   @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  
    assistants      Assistant[]
    vapiAssistants  Json        @default("[]")
    isVapiAssistant Boolean     @default(false)
  
    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    VoiceCampaignLeads VoiceCampaignLead[]
    LeadCalls          LeadCall[]
  
    @@index([agencyId])
  }
  
  model VoiceCampaignLead {
    id String @id @default(uuid())
  
    voiceCampaignId String
    VoiceCampaign   VoiceCampaign @relation(fields: [voiceCampaignId], references: [id])
  
    leadId String
    Lead   Lead   @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
    agencyId String
    Agency   User   @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  
    status     VOICE_CAMPAIGN_LEAD_STATUS  @default(PENDING)
    quality    VOICE_CAMPAIGN_LEAD_QUALITY @default(LOW)
    result     VOICE_CAMPAIGN_LEAD_RESULT  @default(SUCCESS)
    notes      String                      @default("")
    followUpAt DateTime?
  
    calledAt    DateTime?
    retriesLeft Int       @default(3)
    nextRetryAt DateTime?
  
    @@index([agencyId])
    @@index([voiceCampaignId])
    @@index([leadId])
  }
  
  model Pipeline {
    id   String @id @default(uuid())
    name String
  
    // Relations
    agencyId String
    Agency   User   @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    stages        Stage[]
    Opportunities Opportunity[]
  
    @@index([agencyId])
  }
  
  model Stage {
    id    String @id @default(uuid())
    name  String
    order Int    @default(0)
  
    Pipeline   Pipeline @relation(fields: [pipelineId], references: [id], onDelete: Cascade)
    pipelineId String
  
    agencyId String
    Agency   User   @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  
    createdAt     DateTime      @default(now())
    updatedAt     DateTime      @updatedAt
    Opportunities Opportunity[]
  
    @@index([pipelineId])
    @@index([agencyId])
  }
  
  model Opportunity {
    id           String             @id @default(uuid())
    name         String
    description  String             @default("")
    status       OPPORTUNITY_STATUS @default(OPEN)
    source       String             @default("")
    value        Float?
    businessName String?

    order Int @default(0)
  
    // Relations
    stageId String
    Stage   Stage  @relation(fields: [stageId], references: [id], onDelete: Cascade)
  
    pipelineId String
    Pipeline   Pipeline @relation(fields: [pipelineId], references: [id], onDelete: Cascade)
  
    leadId String
    Lead   Lead   @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
    agencyId String
    Agency   User   @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  
    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    @@index([stageId])
    @@index([leadId])
    @@index([agencyId])
    @@index([pipelineId])
  }
  
  model Preference {
    id String @id @default(uuid())
  
    userId String @unique
    User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
    leadPreference Json?
  
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  }
  
  // Automation
  model Automation {
    id String @id @default(uuid())
  
    name        String
    description String
    url         String
    token       String
    isActive    Boolean @default(false)
  
    event AUTOMATION_EVENT @default(OPPORTUNITY_EVENT)
  
    // Relations
    agencyId String
    Agency   User   @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    @@unique([agencyId, event])
    @@index([agencyId])
  }
  
  // Follow up
  model FollowUp {
    id String @id @default(uuid())
  
    reason     String // why follow up
    notes      String // notes
    status     FOLLOW_UP_STATUS @default(PENDING)
    summary    String // conversation summary
    followUpAt DateTime // when to follow up
    priority   PRIORITY         @default(LOW) // priority of the follow up
    attempts   Int              @default(0) // number of attempts
    type       FOLLOW_UP_TYPE   @default(AI_AGENT) // type of follow up
  
    leadId String
    Lead   Lead   @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
    agentId String?
    Agent   User?   @relation("AgentToFollowUp", fields: [agentId], references: [id], onDelete: SetNull)
  
    agencyId String
    Agency   User   @relation("AgencyToFollowUp", fields: [agencyId], references: [id], onDelete: Cascade)
  
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  
    @@index([agencyId])
    @@index([agentId])
    @@index([leadId])
    @@index([createdAt])
  }
  
  enum ROLE {
    GUEST
    AGENT
    AGENCY
    ADMIN
    SUPER_AGENCY
  }
  
  enum PLAN {
    STARTER
    BASIC
    UNLIMITED
  }
  
  // Lead Enums 
  enum LEAD_STATUS {
    NEW
    CONTACTED
    RETRYING
    JUNK
    BOOKED
  }
  
  enum LEAD_STATUS_TYPE {
    HOT
    WARM
    COLD
  }
  
  enum LEAD_QUALITY {
    UNQUALIFIED
    LOW
    MEDIUM
    HIGH
    PERFECT
  }
  
  // Meeting Enums
  
  enum MEETING_STATUS {
    UPCOMING
    SUCCESS
    NO_SHOW
    CANCELLED
    RESCHEDULED
  }
  
  enum CALL_TYPE {
    INBOUND
    OUTBOUND
    WEB
  }
  
  enum CALL_END_REASON {
    assistant_not_valid
    assistant_not_provided
    call_start_error_neither_assistant_nor_server_set
    assistant_request_failed
    assistant_request_returned_error
    assistant_request_returned_unspeakable_error
    assistant_request_returned_invalid_assistant
    assistant_request_returned_no_assistant
    assistant_request_returned_forwarding_phone_number
    assistant_ended_call
    assistant_said_end_call_phrase
    assistant_ended_call_with_hangup_task
    assistant_forwarded_call
    assistant_join_timed_out
    customer_busy
    customer_ended_call
    customer_did_not_answer
    customer_did_not_give_microphone_permission
    assistant_said_message_with_end_call_enabled
    exceeded_max_duration
    manually_canceled
    phone_call_provider_closed_websocket
    db_error
    assistant_not_found
    license_check_failed
    pipeline_error_openai_voice_failed
    pipeline_error_cartesia_voice_failed
    pipeline_error_deepgram_voice_failed
    pipeline_error_eleven_labs_voice_failed
    pipeline_error_playht_voice_failed
    pipeline_error_lmnt_voice_failed
    pipeline_error_azure_voice_failed
    pipeline_error_rime_ai_voice_failed
    pipeline_error_neets_voice_failed
    pipeline_error_smallest_ai_voice_failed
    pipeline_error_neuphonic_voice_failed
    pipeline_error_deepgram_transcriber_failed
    pipeline_error_gladia_transcriber_failed
    pipeline_error_speechmatics_transcriber_failed
    pipeline_error_assembly_ai_transcriber_failed
    pipeline_error_talkscriber_transcriber_failed
    pipeline_error_azure_speech_transcriber_failed
    pipeline_error_vapi_llm_failed
    pipeline_error_vapi_400_bad_request_validation_failed
    pipeline_error_vapi_401_unauthorized
    pipeline_error_vapi_403_model_access_denied
    pipeline_error_vapi_429_exceeded_quota
    pipeline_error_vapi_500_server_error
    pipeline_no_available_model
    worker_shutdown
    unknown_error
    vonage_disconnected
    vonage_failed_to_connect_call
    phone_call_provider_bypass_enabled_but_no_call_received
    vapifault_phone_call_worker_setup_socket_error
    vapifault_phone_call_worker_worker_setup_socket_timeout
    vapifault_phone_call_worker_could_not_find_call
    vapifault_transport_never_connected
    vapifault_web_call_worker_setup_failed
    vapifault_transport_connected_but_call_not_active
    vapifault_call_started_but_connection_to_transport_missing
    pipeline_error_openai_llm_failed
    pipeline_error_azure_openai_llm_failed
    pipeline_error_groq_llm_failed
    pipeline_error_google_llm_failed
    pipeline_error_xai_llm_failed
    pipeline_error_mistral_llm_failed
    pipeline_error_inflection_ai_llm_failed
    pipeline_error_cerebras_llm_failed
    pipeline_error_deep_seek_llm_failed
    pipeline_error_openai_400_bad_request_validation_failed
    pipeline_error_openai_401_unauthorized
    pipeline_error_openai_403_model_access_denied
    pipeline_error_openai_429_exceeded_quota
    pipeline_error_openai_500_server_error
    pipeline_error_google_400_bad_request_validation_failed
    pipeline_error_google_401_unauthorized
    pipeline_error_google_403_model_access_denied
    pipeline_error_google_429_exceeded_quota
    pipeline_error_google_500_server_error
    pipeline_error_xai_400_bad_request_validation_failed
    pipeline_error_xai_401_unauthorized
    pipeline_error_xai_403_model_access_denied
    pipeline_error_xai_429_exceeded_quota
    pipeline_error_xai_500_server_error
    pipeline_error_mistral_400_bad_request_validation_failed
    pipeline_error_mistral_401_unauthorized
    pipeline_error_mistral_403_model_access_denied
    pipeline_error_mistral_429_exceeded_quota
    pipeline_error_mistral_500_server_error
    pipeline_error_inflection_ai_400_bad_request_validation_failed
    pipeline_error_inflection_ai_401_unauthorized
    pipeline_error_inflection_ai_403_model_access_denied
    pipeline_error_inflection_ai_429_exceeded_quota
    pipeline_error_inflection_ai_500_server_error
    pipeline_error_deep_seek_400_bad_request_validation_failed
    pipeline_error_deep_seek_401_unauthorized
    pipeline_error_deep_seek_403_model_access_denied
    pipeline_error_deep_seek_429_exceeded_quota
    pipeline_error_deep_seek_500_server_error
    pipeline_error_azure_openai_400_bad_request_validation_failed
    pipeline_error_azure_openai_401_unauthorized
    pipeline_error_azure_openai_403_model_access_denied
    pipeline_error_azure_openai_429_exceeded_quota
    pipeline_error_azure_openai_500_server_error
    pipeline_error_groq_400_bad_request_validation_failed
    pipeline_error_groq_401_unauthorized
    pipeline_error_groq_403_model_access_denied
    pipeline_error_groq_429_exceeded_quota
    pipeline_error_groq_500_server_error
    pipeline_error_cerebras_400_bad_request_validation_failed
    pipeline_error_cerebras_401_unauthorized
    pipeline_error_cerebras_403_model_access_denied
    pipeline_error_cerebras_429_exceeded_quota
    pipeline_error_cerebras_500_server_error
    pipeline_error_anthropic_400_bad_request_validation_failed
    pipeline_error_anthropic_401_unauthorized
    pipeline_error_anthropic_403_model_access_denied
    pipeline_error_anthropic_429_exceeded_quota
    pipeline_error_anthropic_500_server_error
    pipeline_error_anthropic_llm_failed
    pipeline_error_together_ai_400_bad_request_validation_failed
    pipeline_error_together_ai_401_unauthorized
    pipeline_error_together_ai_403_model_access_denied
    pipeline_error_together_ai_429_exceeded_quota
    pipeline_error_together_ai_500_server_error
    pipeline_error_together_ai_llm_failed
    pipeline_error_anyscale_400_bad_request_validation_failed
    pipeline_error_anyscale_401_unauthorized
    pipeline_error_anyscale_403_model_access_denied
    pipeline_error_anyscale_429_exceeded_quota
    pipeline_error_anyscale_500_server_error
    pipeline_error_anyscale_llm_failed
    pipeline_error_openrouter_400_bad_request_validation_failed
    pipeline_error_openrouter_401_unauthorized
    pipeline_error_openrouter_403_model_access_denied
    pipeline_error_openrouter_429_exceeded_quota
    pipeline_error_openrouter_500_server_error
    pipeline_error_openrouter_llm_failed
    pipeline_error_perplexity_ai_400_bad_request_validation_failed
    pipeline_error_perplexity_ai_401_unauthorized
    pipeline_error_perplexity_ai_403_model_access_denied
    pipeline_error_perplexity_ai_429_exceeded_quota
    pipeline_error_perplexity_ai_500_server_error
    pipeline_error_perplexity_ai_llm_failed
    pipeline_error_deepinfra_400_bad_request_validation_failed
    pipeline_error_deepinfra_401_unauthorized
    pipeline_error_deepinfra_403_model_access_denied
    pipeline_error_deepinfra_429_exceeded_quota
    pipeline_error_deepinfra_500_server_error
    pipeline_error_deepinfra_llm_failed
    pipeline_error_runpod_400_bad_request_validation_failed
    pipeline_error_runpod_401_unauthorized
    pipeline_error_runpod_403_model_access_denied
    pipeline_error_runpod_429_exceeded_quota
    pipeline_error_runpod_500_server_error
    pipeline_error_runpod_llm_failed
    pipeline_error_custom_llm_400_bad_request_validation_failed
    pipeline_error_custom_llm_401_unauthorized
    pipeline_error_custom_llm_403_model_access_denied
    pipeline_error_custom_llm_429_exceeded_quota
    pipeline_error_custom_llm_500_server_error
    pipeline_error_custom_llm_llm_failed
    pipeline_error_custom_voice_failed
    pipeline_error_twilio_failed_to_connect_call
    pipeline_error_twilio_reported_customer_misdialed
    voicemail
  }
  
  enum CALL_RESULT {
    SUCCESS
    FAILURE
  }
  
  enum VOICE_CAMPAIGN_STATUS {
    DRAFT
    TESTING
    ACTIVE
    PAUSED
    COMPLETED
    FAILED
  }
  
  enum VOICE_CAMPAIGN_LEAD_STATUS {
    PENDING
    RETRYING
    IN_PROGRESS
    COMPLETED
    FAILED
  }
  
  enum VOICE_CAMPAIGN_LEAD_QUALITY {
    LOW
    MEDIUM
    HIGH
  }
  
  enum VOICE_CAMPAIGN_LEAD_RESULT {
    SUCCESS
    FAILURE
  }
  
  enum LEAD_CALL_TYPE {
    GLOBAL
    VOICE_CAMPAIGN
  }
  
  // Pipeline Enums
  enum OPPORTUNITY_STATUS {
    OPEN
    LOST
    WON
    ABANDONED
  }
  
  // Automation Enums
  enum AUTOMATION_EVENT {
    // PIPELINE EVENTS 
  
    OPPORTUNITY_EVENT
    STAGE_EVENT
    PIPELINE_EVENT
  
    // Opportunity events 
    OPPORTUNITY_CREATED
    OPPORTUNITY_UPDATED
    OPPORTUNITY_DELETED
    OPPORTUNITY_STATUS_CHANGED
    OPPORTUNITY_STAGE_CHANGED
  
    // Stage events
    STAGE_CREATED
    STAGE_UPDATED
    STAGE_DELETED
  
    // Pipeline events
    PIPELINE_CREATED
    PIPELINE_UPDATED
    PIPELINE_DELETED
  
    // Lead events
    LEAD_EVENTS
    LEAD_CREATED
    LEAD_UPDATED
    LEAD_DELETED
    LEAD_STATUS_CHANGED
    LEAD_QUALITY_CHANGED
  
    // Lead call events 
    LEAD_CALL_CREATED
    LEAD_CALL_UPDATED
    LEAD_CALL_DELETED
  
    // Meeting events 
    MEETING_EVENTS
    MEETING_CREATED
    MEETING_UPDATED
    MEETING_DELETED
    MEETING_STATUS_CHANGED
  
    //  VOICE CAMPAIGN EVENTS
  
    // Voice campaign lead events 
    VOICE_CAMPAIGN_LEAD_CREATED
    VOICE_CAMPAIGN_LEAD_UPDATED
    VOICE_CAMPAIGN_LEAD_DELETED
  
    // Voice campaign events 
    VOICE_CAMPAIGN_EVENTS
    VOICE_CAMPAIGN_CREATED
    VOICE_CAMPAIGN_UPDATED
    VOICE_CAMPAIGN_DELETED
    VOICE_CAMPAIGN_STATUS_CHANGED
  
    // Voice campaign call events 
    VOICE_CAMPAIGN_CALL_CREATED
    VOICE_CAMPAIGN_CALL_UPDATED
    VOICE_CAMPAIGN_CALL_DELETED
    VOICE_CAMPAIGN_CALL_STATUS_CHANGED
  
    // FOLLOWUP EVENTS
    FOLLOWUP_EVENTS
    FOLLOWUP_CREATED
    FOLLOWUP_UPDATED
    FOLLOWUP_DELETED
    FOLLOWUP_STATUS_CHANGED
    FOLLOWUP_PRIORITY_CHANGED
  }
  
  enum PRIORITY {
    LOW
    MEDIUM
    HIGH
  }
  
  enum FOLLOW_UP_STATUS {
    PENDING
    COMPLETED
    RESCHEDULED
    NO_SHOW
    NOT_INTERESTED
    DROPPED
  }
  
  enum FOLLOW_UP_TYPE {
    AI_AGENT
    HUMAN_AGENT
  }
  